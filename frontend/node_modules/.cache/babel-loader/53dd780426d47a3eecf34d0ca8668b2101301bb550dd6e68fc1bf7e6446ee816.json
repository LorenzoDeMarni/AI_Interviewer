{"ast":null,"code":"var _jsxFileName = \"/home/lorenzodemarni/ai_interviewer/frontend/src/components/UploadForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadForm() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [position, setPosition] = useState(\"\");\n  const [company, setCompany] = useState(\"\");\n  const [jobDescription, setJobDescription] = useState(\"\");\n  const [parsedData, setParsedData] = useState(null);\n  const [questions, setQuestions] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!file || !position || !company) {\n      alert(\"Please fill out all fields and upload a file.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"position\", position);\n    formData.append(\"company\", company);\n    formData.append(\"job_description\", jobDescription);\n    try {\n      const res = await axios.post(\"http://127.0.0.1:5000/upload-resume\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      setParsedData(res.data.parsed_data); // Parsed resume data\n      setQuestions(res.data.interview_questions); // Generated interview questions\n    } catch (err) {\n      console.error(err);\n      alert(\"Failed to upload file. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"AI Resume Parser and Interview Question Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Job Position:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: position,\n          onChange: e => setPosition(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Company Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: company,\n          onChange: e => setCompany(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Job Description:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: jobDescription,\n          onChange: e => setJobDescription(e.target.value),\n          placeholder: \"Optional: Add a detailed job description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Upload Resume:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".pdf, .docx\",\n          onChange: e => setFile(e.target.files[0]),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload and Generate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), response && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"AI Parsed Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(response, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this), questions && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Generated Interview Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(questions, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(UploadForm, \"6iZEKs3IPv86ccm+MBVbSdvdDyQ=\");\n_c = UploadForm;\nexport default UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UploadForm","_s","file","setFile","position","setPosition","company","setCompany","jobDescription","setJobDescription","parsedData","setParsedData","questions","setQuestions","handleSubmit","e","preventDefault","alert","formData","FormData","append","res","post","headers","data","parsed_data","interview_questions","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","placeholder","accept","files","response","JSON","stringify","_c","$RefreshReg$"],"sources":["/home/lorenzodemarni/ai_interviewer/frontend/src/components/UploadForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction UploadForm() {\r\n    const [file, setFile] = useState(null);\r\n    const [position, setPosition] = useState(\"\");\r\n    const [company, setCompany] = useState(\"\");\r\n    const [jobDescription, setJobDescription] = useState(\"\");\r\n    const [parsedData, setParsedData] = useState(null);\r\n    const [questions, setQuestions] = useState(null);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!file || !position || !company) {\r\n            alert(\"Please fill out all fields and upload a file.\");\r\n            return;\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"file\", file);\r\n        formData.append(\"position\", position);\r\n        formData.append(\"company\", company);\r\n        formData.append(\"job_description\", jobDescription);\r\n\r\n        try {\r\n            const res = await axios.post(\"http://127.0.0.1:5000/upload-resume\", formData, {\r\n                headers: {\r\n                    \"Content-Type\": \"multipart/form-data\",\r\n                },\r\n            });\r\n            setParsedData(res.data.parsed_data); // Parsed resume data\r\n            setQuestions(res.data.interview_questions); // Generated interview questions\r\n        } catch (err) {\r\n            console.error(err);\r\n            alert(\"Failed to upload file. Please try again.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>AI Resume Parser and Interview Question Generator</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <label>\r\n                    Job Position:\r\n                    <input\r\n                        type=\"text\"\r\n                        value={position}\r\n                        onChange={(e) => setPosition(e.target.value)}\r\n                        required\r\n                    />\r\n                </label>\r\n                <br />\r\n                <label>\r\n                    Company Name:\r\n                    <input\r\n                        type=\"text\"\r\n                        value={company}\r\n                        onChange={(e) => setCompany(e.target.value)}\r\n                        required\r\n                    />\r\n                </label>\r\n                <br />\r\n                <label>\r\n                    Job Description:\r\n                    <textarea\r\n                        value={jobDescription}\r\n                        onChange={(e) => setJobDescription(e.target.value)}\r\n                        placeholder=\"Optional: Add a detailed job description\"\r\n                    />\r\n                </label>\r\n                <br />\r\n                <label>\r\n                    Upload Resume:\r\n                    <input\r\n                        type=\"file\"\r\n                        accept=\".pdf, .docx\"\r\n                        onChange={(e) => setFile(e.target.files[0])}\r\n                        required\r\n                    />\r\n                </label>\r\n                <br />\r\n                <button type=\"submit\">Upload and Generate</button>\r\n            </form>\r\n\r\n            {/* Display parsed resume data */}\r\n            {response && (\r\n                <div>\r\n                    <h2>AI Parsed Data</h2>\r\n                    <pre>{JSON.stringify(response, null, 2)}</pre>\r\n                </div>\r\n            )}\r\n\r\n            {/* Display generated interview questions */}\r\n            {questions && (\r\n                <div>\r\n                    <h2>Generated Interview Questions</h2>\r\n                    <pre>{JSON.stringify(questions, null, 2)}</pre>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UploadForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAEhD,MAAMkB,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACd,IAAI,IAAI,CAACE,QAAQ,IAAI,CAACE,OAAO,EAAE;MAChCW,KAAK,CAAC,+CAA+C,CAAC;MACtD;IACJ;IAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAElB,IAAI,CAAC;IAC7BgB,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEhB,QAAQ,CAAC;IACrCc,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEd,OAAO,CAAC;IACnCY,QAAQ,CAACE,MAAM,CAAC,iBAAiB,EAAEZ,cAAc,CAAC;IAElD,IAAI;MACA,MAAMa,GAAG,GAAG,MAAMxB,KAAK,CAACyB,IAAI,CAAC,qCAAqC,EAAEJ,QAAQ,EAAE;QAC1EK,OAAO,EAAE;UACL,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC;MACFZ,aAAa,CAACU,GAAG,CAACG,IAAI,CAACC,WAAW,CAAC,CAAC,CAAC;MACrCZ,YAAY,CAACQ,GAAG,CAACG,IAAI,CAACE,mBAAmB,CAAC,CAAC,CAAC;IAChD,CAAC,CAAC,OAAOC,GAAG,EAAE;MACVC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MAClBV,KAAK,CAAC,0CAA0C,CAAC;IACrD;EACJ,CAAC;EAED,oBACIlB,OAAA;IAAA+B,QAAA,gBACI/B,OAAA;MAAA+B,QAAA,EAAI;IAAiD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1DnC,OAAA;MAAMoC,QAAQ,EAAErB,YAAa;MAAAgB,QAAA,gBACzB/B,OAAA;QAAA+B,QAAA,GAAO,eAEH,eAAA/B,OAAA;UACIqC,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEjC,QAAS;UAChBkC,QAAQ,EAAGvB,CAAC,IAAKV,WAAW,CAACU,CAAC,CAACwB,MAAM,CAACF,KAAK,CAAE;UAC7CG,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACRnC,OAAA;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNnC,OAAA;QAAA+B,QAAA,GAAO,eAEH,eAAA/B,OAAA;UACIqC,IAAI,EAAC,MAAM;UACXC,KAAK,EAAE/B,OAAQ;UACfgC,QAAQ,EAAGvB,CAAC,IAAKR,UAAU,CAACQ,CAAC,CAACwB,MAAM,CAACF,KAAK,CAAE;UAC5CG,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACRnC,OAAA;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNnC,OAAA;QAAA+B,QAAA,GAAO,kBAEH,eAAA/B,OAAA;UACIsC,KAAK,EAAE7B,cAAe;UACtB8B,QAAQ,EAAGvB,CAAC,IAAKN,iBAAiB,CAACM,CAAC,CAACwB,MAAM,CAACF,KAAK,CAAE;UACnDI,WAAW,EAAC;QAA0C;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACRnC,OAAA;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNnC,OAAA;QAAA+B,QAAA,GAAO,gBAEH,eAAA/B,OAAA;UACIqC,IAAI,EAAC,MAAM;UACXM,MAAM,EAAC,aAAa;UACpBJ,QAAQ,EAAGvB,CAAC,IAAKZ,OAAO,CAACY,CAAC,CAACwB,MAAM,CAACI,KAAK,CAAC,CAAC,CAAC,CAAE;UAC5CH,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACRnC,OAAA;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNnC,OAAA;QAAQqC,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,EAGNU,QAAQ,iBACL7C,OAAA;MAAA+B,QAAA,gBACI/B,OAAA;QAAA+B,QAAA,EAAI;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvBnC,OAAA;QAAA+B,QAAA,EAAMe,IAAI,CAACC,SAAS,CAACF,QAAQ,EAAE,IAAI,EAAE,CAAC;MAAC;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CACR,EAGAtB,SAAS,iBACNb,OAAA;MAAA+B,QAAA,gBACI/B,OAAA;QAAA+B,QAAA,EAAI;MAA6B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtCnC,OAAA;QAAA+B,QAAA,EAAMe,IAAI,CAACC,SAAS,CAAClC,SAAS,EAAE,IAAI,EAAE,CAAC;MAAC;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACjC,EAAA,CAlGQD,UAAU;AAAA+C,EAAA,GAAV/C,UAAU;AAoGnB,eAAeA,UAAU;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}