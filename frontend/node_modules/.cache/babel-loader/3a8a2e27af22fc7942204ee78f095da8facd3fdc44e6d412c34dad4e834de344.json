{"ast":null,"code":"var _jsxFileName = \"/home/lorenzodemarni/ai_interviewer/frontend/src/components/UploadForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\"; // Ensure this is imported as axios is used in the function.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadForm() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [position, setPosition] = useState(\"\");\n  const [company, setCompany] = useState(\"\");\n  const [jobDescription, setJobDescription] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault(); // Prevent the default form submission behavior\n\n    if (!file || !position || !company) {\n      alert(\"Please fill out all fields and upload a file.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"position\", position);\n    formData.append(\"company\", company);\n    formData.append(\"job_description\", jobDescription);\n    try {\n      const res = await axios.post(\"http://127.0.0.1:5000/upload-resume\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      console.log(\"Response:\", res.data); // Log the response for debugging\n      // Pass the response to the QuestionsDisplay component (if applicable)\n    } catch (error) {\n      console.error(\"Error submitting form:\", error);\n      alert(\"Failed to upload. Please check the server or try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center mb-4 text-primary\",\n        children: \"AI Interview Questions Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center mb-4\",\n        children: \"Generate tailored interview questions based on your resume and job details!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"position\",\n            className: \"form-label\",\n            children: \"Job Position\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"position\",\n            placeholder: \"Enter the job position\",\n            value: position,\n            onChange: e => setPosition(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"company\",\n            className: \"form-label\",\n            children: \"Company Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"company\",\n            placeholder: \"Enter the company name\",\n            value: company,\n            onChange: e => setCompany(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"jobDescription\",\n            className: \"form-label\",\n            children: \"Job Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"form-control\",\n            id: \"jobDescription\",\n            rows: \"3\",\n            placeholder: \"Optional: Add a detailed job description\",\n            value: jobDescription,\n            onChange: e => setJobDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"resume\",\n            className: \"form-label\",\n            children: \"Upload Resume\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            className: \"form-control\",\n            id: \"resume\",\n            onChange: e => setFile(e.target.files[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary w-100\",\n          children: \"Upload and Generate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(UploadForm, \"VTzwvcE0ECgXC89IqxMigHBMTXQ=\");\n_c = UploadForm;\nexport default UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UploadForm","_s","file","setFile","position","setPosition","company","setCompany","jobDescription","setJobDescription","handleSubmit","e","preventDefault","alert","formData","FormData","append","res","post","headers","console","log","data","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","placeholder","value","onChange","target","rows","files","_c","$RefreshReg$"],"sources":["/home/lorenzodemarni/ai_interviewer/frontend/src/components/UploadForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\"; // Ensure this is imported as axios is used in the function.\r\n\r\nfunction UploadForm() {\r\n    const [file, setFile] = useState(null);\r\n    const [position, setPosition] = useState(\"\");\r\n    const [company, setCompany] = useState(\"\");\r\n    const [jobDescription, setJobDescription] = useState(\"\");\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); // Prevent the default form submission behavior\r\n\r\n        if (!file || !position || !company) {\r\n            alert(\"Please fill out all fields and upload a file.\");\r\n            return;\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"file\", file);\r\n        formData.append(\"position\", position);\r\n        formData.append(\"company\", company);\r\n        formData.append(\"job_description\", jobDescription);\r\n\r\n        try {\r\n            const res = await axios.post(\"http://127.0.0.1:5000/upload-resume\", formData, {\r\n                headers: { \"Content-Type\": \"multipart/form-data\" },\r\n            });\r\n            console.log(\"Response:\", res.data); // Log the response for debugging\r\n            // Pass the response to the QuestionsDisplay component (if applicable)\r\n        } catch (error) {\r\n            console.error(\"Error submitting form:\", error);\r\n            alert(\"Failed to upload. Please check the server or try again.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <div className=\"card shadow p-4\">\r\n                <h1 className=\"text-center mb-4 text-primary\">AI Interview Questions Generator</h1>\r\n                <p className=\"text-center mb-4\">Generate tailored interview questions based on your resume and job details!</p>\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"position\" className=\"form-label\">\r\n                            Job Position\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"position\"\r\n                            placeholder=\"Enter the job position\"\r\n                            value={position}\r\n                            onChange={(e) => setPosition(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"company\" className=\"form-label\">\r\n                            Company Name\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"company\"\r\n                            placeholder=\"Enter the company name\"\r\n                            value={company}\r\n                            onChange={(e) => setCompany(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"jobDescription\" className=\"form-label\">\r\n                            Job Description\r\n                        </label>\r\n                        <textarea\r\n                            className=\"form-control\"\r\n                            id=\"jobDescription\"\r\n                            rows=\"3\"\r\n                            placeholder=\"Optional: Add a detailed job description\"\r\n                            value={jobDescription}\r\n                            onChange={(e) => setJobDescription(e.target.value)}\r\n                        ></textarea>\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"resume\" className=\"form-label\">\r\n                            Upload Resume\r\n                        </label>\r\n                        <input\r\n                            type=\"file\"\r\n                            className=\"form-control\"\r\n                            id=\"resume\"\r\n                            onChange={(e) => setFile(e.target.files[0])}\r\n                        />\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-primary w-100\">\r\n                        Upload and Generate\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UploadForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMc,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC;;IAEpB,IAAI,CAACV,IAAI,IAAI,CAACE,QAAQ,IAAI,CAACE,OAAO,EAAE;MAChCO,KAAK,CAAC,+CAA+C,CAAC;MACtD;IACJ;IAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEd,IAAI,CAAC;IAC7BY,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEZ,QAAQ,CAAC;IACrCU,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEV,OAAO,CAAC;IACnCQ,QAAQ,CAACE,MAAM,CAAC,iBAAiB,EAAER,cAAc,CAAC;IAElD,IAAI;MACA,MAAMS,GAAG,GAAG,MAAMpB,KAAK,CAACqB,IAAI,CAAC,qCAAqC,EAAEJ,QAAQ,EAAE;QAC1EK,OAAO,EAAE;UAAE,cAAc,EAAE;QAAsB;MACrD,CAAC,CAAC;MACFC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEJ,GAAG,CAACK,IAAI,CAAC,CAAC,CAAC;MACpC;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZH,OAAO,CAACG,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CV,KAAK,CAAC,yDAAyD,CAAC;IACpE;EACJ,CAAC;EAED,oBACId,OAAA;IAAKyB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAC3B1B,OAAA;MAAKyB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC5B1B,OAAA;QAAIyB,SAAS,EAAC,+BAA+B;QAAAC,QAAA,EAAC;MAAgC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnF9B,OAAA;QAAGyB,SAAS,EAAC,kBAAkB;QAAAC,QAAA,EAAC;MAA2E;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC/G9B,OAAA;QAAM+B,QAAQ,EAAEpB,YAAa;QAAAe,QAAA,gBACzB1B,OAAA;UAAKyB,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACjB1B,OAAA;YAAOgC,OAAO,EAAC,UAAU;YAACP,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAEjD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACR9B,OAAA;YACIiC,IAAI,EAAC,MAAM;YACXR,SAAS,EAAC,cAAc;YACxBS,EAAE,EAAC,UAAU;YACbC,WAAW,EAAC,wBAAwB;YACpCC,KAAK,EAAE/B,QAAS;YAChBgC,QAAQ,EAAGzB,CAAC,IAAKN,WAAW,CAACM,CAAC,CAAC0B,MAAM,CAACF,KAAK;UAAE;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACN9B,OAAA;UAAKyB,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACjB1B,OAAA;YAAOgC,OAAO,EAAC,SAAS;YAACP,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAEhD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACR9B,OAAA;YACIiC,IAAI,EAAC,MAAM;YACXR,SAAS,EAAC,cAAc;YACxBS,EAAE,EAAC,SAAS;YACZC,WAAW,EAAC,wBAAwB;YACpCC,KAAK,EAAE7B,OAAQ;YACf8B,QAAQ,EAAGzB,CAAC,IAAKJ,UAAU,CAACI,CAAC,CAAC0B,MAAM,CAACF,KAAK;UAAE;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACN9B,OAAA;UAAKyB,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACjB1B,OAAA;YAAOgC,OAAO,EAAC,gBAAgB;YAACP,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAEvD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACR9B,OAAA;YACIyB,SAAS,EAAC,cAAc;YACxBS,EAAE,EAAC,gBAAgB;YACnBK,IAAI,EAAC,GAAG;YACRJ,WAAW,EAAC,0CAA0C;YACtDC,KAAK,EAAE3B,cAAe;YACtB4B,QAAQ,EAAGzB,CAAC,IAAKF,iBAAiB,CAACE,CAAC,CAAC0B,MAAM,CAACF,KAAK;UAAE;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC,eACN9B,OAAA;UAAKyB,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACjB1B,OAAA;YAAOgC,OAAO,EAAC,QAAQ;YAACP,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAE/C;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACR9B,OAAA;YACIiC,IAAI,EAAC,MAAM;YACXR,SAAS,EAAC,cAAc;YACxBS,EAAE,EAAC,QAAQ;YACXG,QAAQ,EAAGzB,CAAC,IAAKR,OAAO,CAACQ,CAAC,CAAC0B,MAAM,CAACE,KAAK,CAAC,CAAC,CAAC;UAAE;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACN9B,OAAA;UAAQiC,IAAI,EAAC,QAAQ;UAACR,SAAS,EAAC,uBAAuB;UAAAC,QAAA,EAAC;QAExD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAC5B,EAAA,CA/FQD,UAAU;AAAAwC,EAAA,GAAVxC,UAAU;AAiGnB,eAAeA,UAAU;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}